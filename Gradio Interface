import gradio as gr
import tensorflow as tf
import numpy as np
from PIL import Image

# Load the saved model
model = tf.keras.models.load_model('brain_tumor_model.h5')

# Preprocessing function
def preprocess_image(image):
    image = image.convert("L")  # Convert to grayscale
    image = image.resize((64, 64))  # Resize
    image = np.array(image) / 255.0  # Normalize
    image = image.reshape(1, 64, 64, 1)  # Reshape for model
    return image

# Prediction function
def predict(image):
    processed = preprocess_image(image)
    prediction = model.predict(processed)
    label = "Tumor" if prediction[0][0] > 0.5 else "No Tumor"
    confidence = float(prediction[0][0]) if label == "Tumor" else 1 - float(prediction[0][0])
    return f"{label} (Confidence: {confidence:.2f})"

# Launch Gradio app
interface = gr.Interface(
    fn=predict,
    inputs=gr.Image(type="pil"),
    outputs="text",
    title="Brain Tumor Detection",
    description="Upload an MRI image to check for brain tumor presence using CNN"
)

interface.launch()
